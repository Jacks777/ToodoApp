{"ast":null,"code":"var _jsxFileName = \"/Users/j.l.reinartz/coding/todo_app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { startOfDay, endOfDay } from \"date-fns\";\nimport NotSuitable from \"./NotSuitable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [taskText, setTaskText] = useState(\"\");\n  const [isImportant, setIsImportant] = useState(false);\n  const [toodos, setToodos] = useState([]);\n  const [addTaskOpen, setAddTaskOpen] = useState(false);\n  const [activeButton, setActiveButton] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [inEditMode, setInEditMode] = useState(false);\n  const [editItemKey, setEditItemKey] = useState(null);\n  useEffect(() => {\n    const handleData = snapshot => {\n      if (snapshot.exists()) {\n        const todosData = Object.values(snapshot.val());\n        setToodos(todosData);\n      } else {\n        console.log(\"No data found in the 'toodos' table\");\n      }\n    };\n    const handleError = error => {\n      console.error(\"Error fetching data from the 'toodos' table:\", error);\n    };\n\n    // Listen for changes in the 'toodos' table\n    const unsubscribe = onValue(todosRef, handleData, handleError);\n    return () => {\n      // Unsubscribe from real-time updates when the component unmounts\n      unsubscribe();\n    };\n  }, []);\n\n  // WRONG SIZE COMPONENT\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  // Move the conditional rendering outside of the return statement\n  if (!isMobile) {\n    return /*#__PURE__*/_jsxDEV(NotSuitable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  // FIREBASE CONFIG\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n  };\n  const {\n    initializeApp\n  } = require(\"firebase/app\");\n  const {\n    getDatabase,\n    ref,\n    push,\n    set,\n    onValue,\n    child,\n    update,\n    remove\n  } = require(\"firebase/database\");\n\n  // END CONFIG FIREBASE\n  const app = initializeApp(firebaseConfig);\n  const database = getDatabase(app);\n  const todosRef = ref(database, \"toodos\");\n\n  // PAGES OPEN\n  const handleOpenAddTask = () => {\n    setActiveButton(!activeButton);\n    setAddTaskOpen(!addTaskOpen);\n    setTaskText(\"\");\n    setSelectedDate(null);\n    setIsImportant(false);\n    if (inEditMode) {\n      setInEditMode(false);\n    }\n  };\n\n  // COMPILING NEW TOODO\n\n  const handleCompiling = () => {\n    const textInput = document.getElementById(\"textBox\");\n    const dateInput = document.getElementById(\"datePicker\");\n    if (selectedDate === null && taskText === \"\") {\n      textInput.classList.add(\"danger\");\n      dateInput.classList.add(\"danger\");\n    } else if (selectedDate === null) {\n      dateInput.classList.add(\"danger\");\n      textInput.classList.remove(\"danger\");\n    } else if (taskText === \"\") {\n      dateInput.classList.remove(\"danger\");\n      textInput.classList.add(\"danger\");\n    } else {\n      dateInput.classList.remove(\"danger\");\n      textInput.classList.remove(\"danger\");\n      const app = initializeApp(firebaseConfig);\n      const todosRef = ref(getDatabase(app), \"toodos\");\n\n      // FORMAT DATE\n      const originalDate = selectedDate;\n      const day = originalDate.getDate();\n      const month = originalDate.toLocaleString(\"en-US\", {\n        month: \"long\"\n      });\n      const year = originalDate.getFullYear();\n      const hours = originalDate.getHours();\n      const minutes = originalDate.getMinutes();\n      const formattedDate = `${day < 10 ? \"0\" : \"\"}${day} ${month} ${year} ${hours < 10 ? \"0\" : \"\"}${hours}:${minutes < 10 ? \"0\" : \"\"}${minutes}`;\n\n      // END FORMATTING\n\n      const toodoText = taskText;\n      const toodoDate = formattedDate;\n      const toodoImportant = isImportant;\n      const newToodo = {\n        toodo: toodoText,\n        date: toodoDate,\n        done: false,\n        important: toodoImportant\n      };\n\n      // Use push without arguments to generate a new key\n      const newToodoRef = push(todosRef);\n\n      // Get the auto-generated key\n      const newToodoKey = newToodoRef.key;\n\n      // Include the key in the toodo data\n      const toodoWithKey = {\n        ...newToodo,\n        key: newToodoKey\n      };\n\n      // Update the toodo with the key in the database\n      set(newToodoRef, toodoWithKey).then(() => {}).catch(error => {\n        console.error(\"Error writing data to the 'toodos' table: \", error);\n      });\n      handleOpenAddTask();\n      setTaskText(\"\");\n      setSelectedDate(null);\n      setIsImportant(false);\n    }\n  };\n  let deleteTaskInProgress = false;\n\n  // HANDLE CLICKED TASK => DONE!\n  const handleDone = key => {\n    setTimeout(() => {\n      if (deleteTaskInProgress) {\n        return;\n      }\n      const toodoToUpdate = toodos.find(task => task.key === key);\n      if (toodoToUpdate && toodoToUpdate.key && toodoToUpdate.toodo !== null) {\n        const app = initializeApp(firebaseConfig);\n        const database = getDatabase(app);\n        const todosRef = ref(database, \"toodos\");\n\n        // Update the 'done' property in the database\n        const toodoRefToUpdate = child(todosRef, toodoToUpdate.key);\n        update(toodoRefToUpdate, {\n          done: !toodoToUpdate.done\n        }).then(() => {}).catch(error => {\n          console.error(\"Error updating database: \", error);\n        });\n      } else {\n        console.error(\"Invalid or missing identifier in the to-do item:\", toodoToUpdate);\n      }\n    }, 10);\n  };\n  const handleDeleteTask = key => {\n    deleteTaskInProgress = true;\n    setTimeout(() => {\n      const toodoToUpdate = toodos.find(task => task.key === key);\n      if (toodoToUpdate && toodoToUpdate.key) {\n        const database = getDatabase(); // Assuming you've already initialized the app elsewhere\n\n        // Reference to the 'toodos' collection\n        const todosRef = ref(database, \"toodos\");\n\n        // Reference to the specific to-do item\n        const toodoRefToUpdate = child(todosRef, toodoToUpdate.key);\n\n        // Remove the to-do item from the database\n        remove(toodoRefToUpdate).then(() => {\n          setToodos(prevToodos => prevToodos.filter(task => task.key !== key));\n        }).catch(error => {\n          console.error(\"Error deleting data: \", error);\n        });\n      } else {\n        console.error(\"Invalid or missing identifier in the to-do item:\", toodoToUpdate);\n      }\n      deleteTaskInProgress = false;\n    }, 1000);\n  };\n  const handleEditTask = item => {\n    setActiveButton(!activeButton);\n    setAddTaskOpen(!addTaskOpen);\n    setTaskText(item.toodo);\n    setSelectedDate(new Date(item.date));\n    setIsImportant(item.important);\n    setInEditMode(true);\n    setEditItemKey(item.key);\n  };\n  const handleEditTaskInDB = () => {\n    // Formatting the date\n    const originalDate = selectedDate;\n    const day = originalDate.getDate();\n    const month = originalDate.toLocaleString(\"en-US\", {\n      month: \"long\"\n    });\n    const year = originalDate.getFullYear();\n    const hours = originalDate.getHours();\n    const minutes = originalDate.getMinutes();\n    const formattedDate = `${day < 10 ? \"0\" : \"\"}${day} ${month} ${year} ${hours < 10 ? \"0\" : \"\"}${hours}:${minutes < 10 ? \"0\" : \"\"}${minutes}`;\n\n    // Creating the updated to-do object\n    const updatedToodo = {\n      toodo: taskText,\n      date: formattedDate,\n      done: false,\n      important: isImportant\n    };\n\n    // Reference to the specific to-do item\n    const toodoRefToUpdate = child(todosRef, editItemKey);\n\n    // Update the to-do item in the database\n    update(toodoRefToUpdate, updatedToodo).then(() => {}).catch(error => {\n      console.error(\"Error updating to-do item: \", error);\n    });\n\n    // Resetting state and handling UI\n    setActiveButton(false);\n    setAddTaskOpen(false);\n    setInEditMode(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Lander, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      handleDeleteTask: handleDeleteTask,\n      handleDone: handleDone,\n      toodos: toodos,\n      handleOpenAddTask: handleOpenAddTask,\n      activeButton: activeButton,\n      addTaskOpen: addTaskOpen,\n      handleCompiling: handleCompiling,\n      handleEditTask: handleEditTask,\n      inEditMode: inEditMode,\n      handleEditTaskInDB: handleEditTaskInDB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      activeButton: activeButton,\n      handleOpenAddTask: handleOpenAddTask,\n      selectedDate: selectedDate,\n      setSelectedDate: setSelectedDate,\n      taskText: taskText,\n      setTaskText: setTaskText,\n      isImportant: isImportant,\n      setIsImportant: setIsImportant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dLpWyaYMfWcl1vuz4Oa2GVOT+b0=\");\n_c = App;\nfunction Lander() {\n  _s2();\n  useEffect(() => {\n    const lander = document.querySelector(\".lander\");\n    const container = document.querySelector(\".container_tasks\");\n    const handleLanderAnimationEnd = () => {\n      // Hide the element after the animation is complete\n      lander.style.display = \"none\";\n      container.style.display = \"flex\";\n    };\n\n    // Add the animationend event listener\n    lander.addEventListener(\"animationend\", handleLanderAnimationEnd);\n\n    // Cleanup function to remove the event listener\n    return () => {\n      lander.removeEventListener(\"animationend\", handleLanderAnimationEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lander\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"assets/icons/logo.svg\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title_logo\",\n      children: \"Toodo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n}\n_s2(Lander, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Lander;\nfunction Tasks({\n  handleOpenAddTask,\n  activeButton,\n  addTaskOpen,\n  handleCompiling,\n  toodos,\n  handleDone,\n  handleDeleteTask,\n  handleEditTask,\n  inEditMode,\n  handleEditTaskInDB\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_tasks\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_tasks-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_tasks-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Toodo's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/icons/logo.svg\",\n          alt: \"filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks_display\",\n        children: toodos.length < 1 ? \"Geen Toodo's gepland. Voeg er een toe!\" : toodos.slice().sort((a, b) => {\n          if (a.important && !b.important) return -1;\n          if (!a.important && b.important) return 1;\n          return new Date(a.date) - new Date(b.date);\n        }).map(item => /*#__PURE__*/_jsxDEV(TasksDisplay, {\n          handleDone: handleDone,\n          item: item,\n          handleDeleteTask: handleDeleteTask,\n          handleOpenAddTask: handleOpenAddTask,\n          handleEditTask: handleEditTask,\n          handleEditTaskInDB: () => handleEditTaskInDB(item)\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_tasks-end\",\n        children: inEditMode ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `activeButton`,\n          onClick: handleEditTaskInDB,\n          src: \"assets/icons/plus.svg\",\n          alt: \"plusEdit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `${activeButton ? \"activeButton\" : \"\"}`,\n          onClick: addTaskOpen ? handleCompiling : handleOpenAddTask,\n          src: \"assets/icons/plus.svg\",\n          alt: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Tasks;\nfunction TasksDisplay({\n  item,\n  handleDone,\n  handleDeleteTask,\n  handleOpenAddTask,\n  handleEditTask\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task ${item.important ? \"important\" : \"\"}`,\n      onClick: () => handleDone(item.key),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: `${item.done ? \"taskActive\" : \"\"}`,\n          children: item.toodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task_dateEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), item.done && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"editFunction\",\n            onClick: () => handleEditTask(item),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), item.done && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"check\",\n          src: \"/assets/icons/check.svg\",\n          alt: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"trash\",\n          src: \"/assets/icons/trash.svg\",\n          alt: \"trash\",\n          onClick: () => handleDeleteTask(item.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c4 = TasksDisplay;\nfunction AddTask({\n  activeButton,\n  handleOpenAddTask,\n  selectedDate,\n  setSelectedDate,\n  taskText,\n  setTaskText,\n  isImportant,\n  setIsImportant\n}) {\n  const currentDate = new Date();\n  const minTime = startOfDay(currentDate);\n  const maxTime = endOfDay(currentDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container_addTask ${activeButton ? \"active\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_addTask-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_addTask-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Toodo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => handleOpenAddTask(),\n          src: \"/assets/icons/close.svg\",\n          alt: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addTask_display\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"addTask_display-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"textBox\",\n            className: \"textbox\",\n            type: \"text\",\n            value: taskText,\n            onChange: e => setTaskText(e.target.value),\n            placeholder: \"What needs to be done?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            id: \"datePicker\",\n            className: \"datePicker\",\n            selected: selectedDate,\n            onChange: date => setSelectedDate(date),\n            showTimeSelect: true,\n            dateFormat: \"dd MMMM yyyy HH:mm\",\n            placeholderText: \"Choose date and time\",\n            minDate: currentDate,\n            minTime: minTime,\n            maxTime: maxTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"important_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Is this Toodo important?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isImportant,\n              onChange: e => setIsImportant(e.target.checked),\n              className: \"checkBox\",\n              id: \"checkBox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 5\n  }, this);\n}\n_c5 = AddTask;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Lander\");\n$RefreshReg$(_c3, \"Tasks\");\n$RefreshReg$(_c4, \"TasksDisplay\");\n$RefreshReg$(_c5, \"AddTask\");","map":{"version":3,"names":["useEffect","useState","DatePicker","startOfDay","endOfDay","NotSuitable","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedDate","setSelectedDate","taskText","setTaskText","isImportant","setIsImportant","toodos","setToodos","addTaskOpen","setAddTaskOpen","activeButton","setActiveButton","isMobile","setIsMobile","window","innerWidth","inEditMode","setInEditMode","editItemKey","setEditItemKey","handleData","snapshot","exists","todosData","Object","values","val","console","log","handleError","error","unsubscribe","onValue","todosRef","handleResize","addEventListener","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","initializeApp","require","getDatabase","ref","push","set","child","update","remove","app","database","handleOpenAddTask","handleCompiling","textInput","document","getElementById","dateInput","classList","add","originalDate","day","getDate","month","toLocaleString","year","getFullYear","hours","getHours","minutes","getMinutes","formattedDate","toodoText","toodoDate","toodoImportant","newToodo","toodo","date","done","important","newToodoRef","newToodoKey","key","toodoWithKey","then","catch","deleteTaskInProgress","handleDone","setTimeout","toodoToUpdate","find","task","toodoRefToUpdate","handleDeleteTask","prevToodos","filter","handleEditTask","item","Date","handleEditTaskInDB","updatedToodo","className","children","Lander","Tasks","AddTask","_c","_s2","lander","querySelector","container","handleLanderAnimationEnd","style","display","src","alt","_c2","length","slice","sort","a","b","map","TasksDisplay","onClick","_c3","_c4","currentDate","minTime","maxTime","id","type","value","onChange","e","target","placeholder","selected","showTimeSelect","dateFormat","placeholderText","minDate","checked","_c5","$RefreshReg$"],"sources":["/Users/j.l.reinartz/coding/todo_app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { startOfDay, endOfDay } from \"date-fns\";\n\nimport NotSuitable from \"./NotSuitable\";\n\nfunction App() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [taskText, setTaskText] = useState(\"\");\n  const [isImportant, setIsImportant] = useState(false);\n\n  const [toodos, setToodos] = useState([]);\n\n  const [addTaskOpen, setAddTaskOpen] = useState(false);\n  const [activeButton, setActiveButton] = useState(false);\n\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  const [inEditMode, setInEditMode] = useState(false);\n  const [editItemKey, setEditItemKey] = useState(null);\n\n  useEffect(() => {\n    const handleData = (snapshot) => {\n      if (snapshot.exists()) {\n        const todosData = Object.values(snapshot.val());\n        setToodos(todosData);\n      } else {\n        console.log(\"No data found in the 'toodos' table\");\n      }\n    };\n\n    const handleError = (error) => {\n      console.error(\"Error fetching data from the 'toodos' table:\", error);\n    };\n\n    // Listen for changes in the 'toodos' table\n    const unsubscribe = onValue(todosRef, handleData, handleError);\n\n    return () => {\n      // Unsubscribe from real-time updates when the component unmounts\n      unsubscribe();\n    };\n  }, []);\n\n  // WRONG SIZE COMPONENT\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  // Move the conditional rendering outside of the return statement\n  if (!isMobile) {\n    return <NotSuitable />;\n  }\n\n  // FIREBASE CONFIG\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  };\n\n  const { initializeApp } = require(\"firebase/app\");\n  const {\n    getDatabase,\n    ref,\n    push,\n    set,\n    onValue,\n    child,\n    update,\n    remove,\n  } = require(\"firebase/database\");\n\n  // END CONFIG FIREBASE\n  const app = initializeApp(firebaseConfig);\n  const database = getDatabase(app);\n  const todosRef = ref(database, \"toodos\");\n\n  // PAGES OPEN\n  const handleOpenAddTask = () => {\n    setActiveButton(!activeButton);\n    setAddTaskOpen(!addTaskOpen);\n\n    setTaskText(\"\");\n    setSelectedDate(null);\n    setIsImportant(false);\n\n    if (inEditMode) {\n      setInEditMode(false);\n    }\n  };\n\n  // COMPILING NEW TOODO\n\n  const handleCompiling = () => {\n    const textInput = document.getElementById(\"textBox\");\n    const dateInput = document.getElementById(\"datePicker\");\n\n    if (selectedDate === null && taskText === \"\") {\n      textInput.classList.add(\"danger\");\n      dateInput.classList.add(\"danger\");\n    } else if (selectedDate === null) {\n      dateInput.classList.add(\"danger\");\n      textInput.classList.remove(\"danger\");\n    } else if (taskText === \"\") {\n      dateInput.classList.remove(\"danger\");\n      textInput.classList.add(\"danger\");\n    } else {\n      dateInput.classList.remove(\"danger\");\n      textInput.classList.remove(\"danger\");\n\n      const app = initializeApp(firebaseConfig);\n      const todosRef = ref(getDatabase(app), \"toodos\");\n\n      // FORMAT DATE\n      const originalDate = selectedDate;\n\n      const day = originalDate.getDate();\n      const month = originalDate.toLocaleString(\"en-US\", { month: \"long\" });\n      const year = originalDate.getFullYear();\n      const hours = originalDate.getHours();\n      const minutes = originalDate.getMinutes();\n\n      const formattedDate = `${day < 10 ? \"0\" : \"\"}${day} ${month} ${year} ${\n        hours < 10 ? \"0\" : \"\"\n      }${hours}:${minutes < 10 ? \"0\" : \"\"}${minutes}`;\n\n      // END FORMATTING\n\n      const toodoText = taskText;\n      const toodoDate = formattedDate;\n      const toodoImportant = isImportant;\n\n      const newToodo = {\n        toodo: toodoText,\n        date: toodoDate,\n        done: false,\n        important: toodoImportant,\n      };\n\n      // Use push without arguments to generate a new key\n      const newToodoRef = push(todosRef);\n\n      // Get the auto-generated key\n      const newToodoKey = newToodoRef.key;\n\n      // Include the key in the toodo data\n      const toodoWithKey = {\n        ...newToodo,\n        key: newToodoKey,\n      };\n\n      // Update the toodo with the key in the database\n      set(newToodoRef, toodoWithKey)\n        .then(() => {})\n        .catch((error) => {\n          console.error(\"Error writing data to the 'toodos' table: \", error);\n        });\n\n      handleOpenAddTask();\n\n      setTaskText(\"\");\n      setSelectedDate(null);\n      setIsImportant(false);\n    }\n  };\n\n  let deleteTaskInProgress = false;\n\n  // HANDLE CLICKED TASK => DONE!\n  const handleDone = (key) => {\n    setTimeout(() => {\n      if (deleteTaskInProgress) {\n        return;\n      }\n\n      const toodoToUpdate = toodos.find((task) => task.key === key);\n\n      if (toodoToUpdate && toodoToUpdate.key && toodoToUpdate.toodo !== null) {\n        const app = initializeApp(firebaseConfig);\n        const database = getDatabase(app);\n        const todosRef = ref(database, \"toodos\");\n\n        // Update the 'done' property in the database\n        const toodoRefToUpdate = child(todosRef, toodoToUpdate.key);\n        update(toodoRefToUpdate, { done: !toodoToUpdate.done })\n          .then(() => {})\n          .catch((error) => {\n            console.error(\"Error updating database: \", error);\n          });\n      } else {\n        console.error(\n          \"Invalid or missing identifier in the to-do item:\",\n          toodoToUpdate\n        );\n      }\n    }, 10);\n  };\n\n  const handleDeleteTask = (key) => {\n    deleteTaskInProgress = true;\n\n    setTimeout(() => {\n      const toodoToUpdate = toodos.find((task) => task.key === key);\n\n      if (toodoToUpdate && toodoToUpdate.key) {\n        const database = getDatabase(); // Assuming you've already initialized the app elsewhere\n\n        // Reference to the 'toodos' collection\n        const todosRef = ref(database, \"toodos\");\n\n        // Reference to the specific to-do item\n        const toodoRefToUpdate = child(todosRef, toodoToUpdate.key);\n\n        // Remove the to-do item from the database\n        remove(toodoRefToUpdate)\n          .then(() => {\n            setToodos((prevToodos) =>\n              prevToodos.filter((task) => task.key !== key)\n            );\n          })\n          .catch((error) => {\n            console.error(\"Error deleting data: \", error);\n          });\n      } else {\n        console.error(\n          \"Invalid or missing identifier in the to-do item:\",\n          toodoToUpdate\n        );\n      }\n      deleteTaskInProgress = false;\n    }, 1000);\n  };\n\n  const handleEditTask = (item) => {\n    setActiveButton(!activeButton);\n    setAddTaskOpen(!addTaskOpen);\n\n    setTaskText(item.toodo);\n    setSelectedDate(new Date(item.date));\n    setIsImportant(item.important);\n    setInEditMode(true);\n\n    setEditItemKey(item.key);\n  };\n\n  const handleEditTaskInDB = () => {\n    // Formatting the date\n    const originalDate = selectedDate;\n    const day = originalDate.getDate();\n    const month = originalDate.toLocaleString(\"en-US\", { month: \"long\" });\n    const year = originalDate.getFullYear();\n    const hours = originalDate.getHours();\n    const minutes = originalDate.getMinutes();\n    const formattedDate = `${day < 10 ? \"0\" : \"\"}${day} ${month} ${year} ${\n      hours < 10 ? \"0\" : \"\"\n    }${hours}:${minutes < 10 ? \"0\" : \"\"}${minutes}`;\n\n    // Creating the updated to-do object\n    const updatedToodo = {\n      toodo: taskText,\n      date: formattedDate,\n      done: false,\n      important: isImportant,\n    };\n\n    // Reference to the specific to-do item\n    const toodoRefToUpdate = child(todosRef, editItemKey);\n\n    // Update the to-do item in the database\n    update(toodoRefToUpdate, updatedToodo)\n      .then(() => {})\n      .catch((error) => {\n        console.error(\"Error updating to-do item: \", error);\n      });\n\n    // Resetting state and handling UI\n    setActiveButton(false);\n    setAddTaskOpen(false);\n    setInEditMode(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <Lander />\n      <Tasks\n        handleDeleteTask={handleDeleteTask}\n        handleDone={handleDone}\n        toodos={toodos}\n        handleOpenAddTask={handleOpenAddTask}\n        activeButton={activeButton}\n        addTaskOpen={addTaskOpen}\n        handleCompiling={handleCompiling}\n        handleEditTask={handleEditTask}\n        inEditMode={inEditMode}\n        handleEditTaskInDB={handleEditTaskInDB}\n      />\n      <AddTask\n        activeButton={activeButton}\n        handleOpenAddTask={handleOpenAddTask}\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        taskText={taskText}\n        setTaskText={setTaskText}\n        isImportant={isImportant}\n        setIsImportant={setIsImportant}\n      />\n    </div>\n  );\n}\n\nfunction Lander() {\n  useEffect(() => {\n    const lander = document.querySelector(\".lander\");\n    const container = document.querySelector(\".container_tasks\");\n\n    const handleLanderAnimationEnd = () => {\n      // Hide the element after the animation is complete\n      lander.style.display = \"none\";\n      container.style.display = \"flex\";\n    };\n\n    // Add the animationend event listener\n    lander.addEventListener(\"animationend\", handleLanderAnimationEnd);\n\n    // Cleanup function to remove the event listener\n    return () => {\n      lander.removeEventListener(\"animationend\", handleLanderAnimationEnd);\n    };\n  }, []);\n\n  return (\n    <div className=\"lander\">\n      <img src=\"assets/icons/logo.svg\" alt=\"logo\" />\n      <h1 className=\"title_logo\">Toodo App</h1>\n    </div>\n  );\n}\n\nfunction Tasks({\n  handleOpenAddTask,\n  activeButton,\n  addTaskOpen,\n  handleCompiling,\n  toodos,\n  handleDone,\n  handleDeleteTask,\n  handleEditTask,\n  inEditMode,\n  handleEditTaskInDB,\n}) {\n  return (\n    <div className=\"container_tasks\">\n      <div className=\"container_tasks-inner\">\n        <div className=\"container_tasks-top\">\n          <h1>Toodo's</h1>\n          <img src=\"/assets/icons/logo.svg\" alt=\"filter\" />\n        </div>\n        <div className=\"tasks_display\">\n          {toodos.length < 1\n            ? \"Geen Toodo's gepland. Voeg er een toe!\"\n            : toodos\n                .slice()\n                .sort((a, b) => {\n                  if (a.important && !b.important) return -1;\n                  if (!a.important && b.important) return 1;\n\n                  return new Date(a.date) - new Date(b.date);\n                })\n                .map((item) => (\n                  <TasksDisplay\n                    handleDone={handleDone}\n                    key={item.key}\n                    item={item}\n                    handleDeleteTask={handleDeleteTask}\n                    handleOpenAddTask={handleOpenAddTask}\n                    handleEditTask={handleEditTask}\n                    handleEditTaskInDB={() => handleEditTaskInDB(item)}\n                  />\n                ))}\n        </div>\n        <div className=\"container_tasks-end\">\n          {inEditMode ? (\n            <img\n              className={`activeButton`}\n              onClick={handleEditTaskInDB}\n              src=\"assets/icons/plus.svg\"\n              alt=\"plusEdit\"\n            />\n          ) : (\n            <img\n              className={`${activeButton ? \"activeButton\" : \"\"}`}\n              onClick={addTaskOpen ? handleCompiling : handleOpenAddTask}\n              src=\"assets/icons/plus.svg\"\n              alt=\"plus\"\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction TasksDisplay({\n  item,\n  handleDone,\n  handleDeleteTask,\n  handleOpenAddTask,\n  handleEditTask,\n}) {\n  return (\n    <>\n      <div\n        className={`task ${item.important ? \"important\" : \"\"}`}\n        onClick={() => handleDone(item.key)}\n      >\n        <div>\n          <h4 className={`${item.done ? \"taskActive\" : \"\"}`}>{item.toodo}</h4>\n          <div className=\"task_dateEdit\">\n            <p>{item.date}</p>\n            {item.done && (\n              <p className=\"editFunction\" onClick={() => handleEditTask(item)}>\n                Edit\n              </p>\n            )}\n          </div>\n        </div>\n        {item.done && (\n          <>\n            <img className=\"check\" src=\"/assets/icons/check.svg\" alt=\"check\" />\n            <img\n              className=\"trash\"\n              src=\"/assets/icons/trash.svg\"\n              alt=\"trash\"\n              onClick={() => handleDeleteTask(item.key)}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction AddTask({\n  activeButton,\n  handleOpenAddTask,\n  selectedDate,\n  setSelectedDate,\n  taskText,\n  setTaskText,\n  isImportant,\n  setIsImportant,\n}) {\n  const currentDate = new Date();\n  const minTime = startOfDay(currentDate);\n  const maxTime = endOfDay(currentDate);\n\n  return (\n    <div className={`container_addTask ${activeButton ? \"active\" : \"\"}`}>\n      <div className=\"container_addTask-inner\">\n        <div className=\"container_addTask-top\">\n          <h1>New Toodo</h1>\n          <img\n            onClick={() => handleOpenAddTask()}\n            src=\"/assets/icons/close.svg\"\n            alt=\"close\"\n          />\n        </div>\n        <div className=\"addTask_display\">\n          <form className=\"addTask_display-form\">\n            <input\n              id=\"textBox\"\n              className=\"textbox\"\n              type=\"text\"\n              value={taskText}\n              onChange={(e) => setTaskText(e.target.value)}\n              placeholder=\"What needs to be done?\"\n            />\n            <DatePicker\n              id=\"datePicker\"\n              className=\"datePicker\"\n              selected={selectedDate}\n              onChange={(date) => setSelectedDate(date)}\n              showTimeSelect\n              dateFormat=\"dd MMMM yyyy HH:mm\"\n              placeholderText=\"Choose date and time\"\n              minDate={currentDate}\n              minTime={minTime}\n              maxTime={maxTime}\n            />\n            <div className=\"important_box\">\n              <h5>Is this Toodo important?</h5>\n              <input\n                type=\"checkbox\"\n                checked={isImportant}\n                onChange={(e) => setIsImportant(e.target.checked)}\n                className=\"checkBox\"\n                id=\"checkBox\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}